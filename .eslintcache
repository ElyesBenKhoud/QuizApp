[{"D:\\Code source\\QuizApp PedroTeck\\src\\App.js":"1","D:\\Code source\\QuizApp PedroTeck\\src\\helpers\\Questions.js":"2","D:\\RBK hack Reactor\\QuizApp\\src\\components\\Menu.js":"3","D:\\RBK hack Reactor\\QuizApp\\src\\helpers\\Questions.js":"4","D:\\RBK hack Reactor\\QuizApp\\src\\App.js":"5","D:\\RBK hack Reactor\\QuizApp\\src\\components\\Quiz.js":"6"},{"size":933,"mtime":1633625306200,"results":"7","hashOfConfig":"8"},{"size":569,"mtime":1633625306205,"results":"9","hashOfConfig":"8"},{"size":676,"mtime":1636807874167,"results":"10","hashOfConfig":"11"},{"size":641,"mtime":1636807802924,"results":"12","hashOfConfig":"11"},{"size":933,"mtime":1633625306200,"results":"13","hashOfConfig":"11"},{"size":2072,"mtime":1636808213055,"results":"14","hashOfConfig":"11"},{"filePath":"15","messages":"16","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"dq472j",{"filePath":"17","messages":"18","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"19","messages":"20","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},"1vp0u06",{"filePath":"21","messages":"22","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"25","messages":"26","errorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"27"},"D:\\Code source\\QuizApp PedroTeck\\src\\App.js",[],"D:\\Code source\\QuizApp PedroTeck\\src\\helpers\\Questions.js",[],"D:\\RBK hack Reactor\\QuizApp\\src\\components\\Menu.js",["28","29"],"D:\\RBK hack Reactor\\QuizApp\\src\\helpers\\Questions.js",[],"D:\\RBK hack Reactor\\QuizApp\\src\\App.js",[],"D:\\RBK hack Reactor\\QuizApp\\src\\components\\Quiz.js",["30","31","32","33","34","35"],"import \"../App.css\";\r\nimport { Questions } from \"../helpers/Questions\";\r\nimport { useState } from \"react\";\r\n\r\nimport { useContext } from \"react\";\r\nimport { GameStateContext } from \"../helpers/Contexts\";\r\n\r\nfunction Quiz() {\r\n  const [currentQuestion, setCurrentQuestion] = useState(0);\r\n  const [optionChosen, setOptionChosen] = useState(\"\");\r\n  const [color, setColor] = useState(true);\r\n  const { score, setScore, gameState, setGameState } =\r\n    useContext(GameStateContext);\r\n\r\n  const chooseOption = (option) => {\r\n    setOptionChosen(option);\r\n  };\r\n\r\n  const nextQuestion = () => {\r\n    if (Questions[currentQuestion].asnwer == optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setCurrentQuestion(currentQuestion + 1);\r\n  };\r\n\r\n  const finishQuiz = () => {\r\n    if (Questions[currentQuestion].asnwer == optionChosen) {\r\n      setScore(score + 1);\r\n    }\r\n    setGameState(\"finished\");\r\n  };\r\n\r\n  return (\r\n    <div className=\"Quiz\">\r\n      <h1>{Questions[currentQuestion].prompt}</h1>\r\n      <div className=\"questions\">\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionA\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionA}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionB\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionB}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionC\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionC}\r\n        </button>\r\n        <button\r\n          onClick={() => {\r\n            chooseOption(\"optionD\");\r\n          }}\r\n        >\r\n          {Questions[currentQuestion].optionD}\r\n        </button>\r\n      </div>\r\n\r\n      {currentQuestion == Questions.length - 1 ? (\r\n        <button onClick={finishQuiz} id=\"nextQuestion\">\r\n          Finish Quiz\r\n        </button>\r\n      ) : (\r\n        <button onClick={nextQuestion} id=\"nextQuestion\">\r\n          Next Question\r\n        </button>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default Quiz;\r\n",{"ruleId":"36","severity":1,"message":"37","line":6,"column":11,"nodeType":"38","messageId":"39","endLine":6,"endColumn":20},{"ruleId":"36","severity":1,"message":"40","line":6,"column":36,"nodeType":"38","messageId":"39","endLine":6,"endColumn":44},{"ruleId":"36","severity":1,"message":"41","line":11,"column":10,"nodeType":"38","messageId":"39","endLine":11,"endColumn":15},{"ruleId":"36","severity":1,"message":"42","line":11,"column":17,"nodeType":"38","messageId":"39","endLine":11,"endColumn":25},{"ruleId":"36","severity":1,"message":"37","line":12,"column":28,"nodeType":"38","messageId":"39","endLine":12,"endColumn":37},{"ruleId":"43","severity":1,"message":"44","line":20,"column":43,"nodeType":"45","messageId":"46","endLine":20,"endColumn":45},{"ruleId":"43","severity":1,"message":"44","line":27,"column":43,"nodeType":"45","messageId":"46","endLine":27,"endColumn":45},{"ruleId":"43","severity":1,"message":"44","line":67,"column":24,"nodeType":"45","messageId":"46","endLine":67,"endColumn":26},"no-unused-vars","'gameState' is assigned a value but never used.","Identifier","unusedVar","'userName' is assigned a value but never used.","'color' is assigned a value but never used.","'setColor' is assigned a value but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected"]